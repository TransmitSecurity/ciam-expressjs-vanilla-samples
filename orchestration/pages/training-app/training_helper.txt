Training Helper
----------------

Training Slides: https://docs.google.com/presentation/d/1Uz8vGPRGCbcrRMrz7itx04_E9pypcTxAhtj_L23ndDM/edit?usp=sharing
SDK Documentation: 

Client ID: az8xbjlb1zbfot2husyw7qu0kb3qj074

=================================================

Git Clone:
git clone git@github.com:TransmitSecurity/ciam-expressjs-vanilla-samples.git

Change branch to training
git checkout training-dec-23

Install dependencies
npm install --force

Test run sample repository
./launch.sh
* scroll down to choose orchestration
** open a browser to http://localhost:8080/

=================================================

Debugger configuration
{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "type": "chrome",
            "request": "launch",
            "name": "Training App",
            "url": "http://localhost:5500/orchestration/pages/training-app/index.html",
            "runtimeArgs": [
                "--disable-web-security"
             ],
            "webRoot": "${workspaceFolder}",
        }
    ]
}

=================================================

Integrate SDK - Documentation

Install SDK in index.html: https://developer.transmitsecurity.com/sdk-ref/platform/introduction/
Initialization: https://developer.transmitsecurity.com/sdk-ref/idosdk/interfaces/idosdk/#init
Start journey: https://developer.transmitsecurity.com/sdk-ref/idosdk/interfaces/idosdk/#startjourney
idoServiceResponse object: https://developer.transmitsecurity.com/sdk-ref/idosdk/interfaces/idoserviceresponse/
submit client input: https://developer.transmitsecurity.com/sdk-ref/idosdk/interfaces/idosdk/#submitclientresponse

=================================================

HTML Form handling in Javascript

// Add code to capture the form data on submission
document.getElementById('some_form').addEventListener('submit', function (e) {
    e.preventDefault();

    const formData = new FormData(e.target);
    // output as an object
    console.log(Object.fromEntries(formData));

    // resolve promise with the expected sdk client input object...
});

=================================================

SDK state management

Get a serialized SDK state string: https://developer.transmitsecurity.com/sdk-ref/idosdk/interfaces/idosdk/#serializestate
Restore SDK with serialized state string and get the latest idoServiceResponse: https://developer.transmitsecurity.com/sdk-ref/idosdk/interfaces/idosdk/#restorefromserializedstate

(*) Store string in browser local storage:
localStorage.setItem('idoSDKState', ido.serializeState());

(*) Extract serialized state:
const idoSDKState = localStorage.getItem('idoSDKState');

(*) Decide if to use a serialized state to restore a journey or start a new one:
let idoResponse = null;
if (!idoSDKState) {
    pageUtils.showLoading();
    idoResponse = await ido.startJourney(journeyName, additionalParams);
    pageUtils.hideLoading();
} else {
    idoResponse = ido.restoreFromSerializedState(idoSDKState);
}

(*) Remove the saved state if the journey ended
localStorage.removeItem('idoSDKState');